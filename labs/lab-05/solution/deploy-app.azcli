env=dev
loc=westeurope
grp=az-native-$env
cosmosDbAcct=az-native-cosmos-nosql-$env
cosmosDBName=food-nosql-$env
endpoint=https://$cosmosDbAcct.documents.azure.com:443
vault=az-native-kv-$env
acr=aznativecontainers$env
acaenv=acaenv-az-native-$env
storageAcct=aznativestorage$env

pwd=$(az acr credential show -n $acr --query passwords[0].value -o tsv)
loginSrv=$(az acr list --query "[?name=='$acr'].loginServer" -o tsv) 

aiKey=$(az keyvault secret show --vault-name $vault --name "aiKey" --query  value -o tsv)
echo $aiKey

az group create --name $grp --location $loc

az cosmosdb create --name $cosmosDbAcct --kind GlobalDocumentDB -g $grp --enable-free-tier true
az cosmosdb sql database create --account-name $cosmosDbAcct --name $cosmosDBName -g $grp --max-throughput 1000
az cosmosdb sql container create --account-name $cosmosDbAcct --database-name $cosmosDBName --name orders --partition-key-path "/customer/Id" -g $grp
az cosmosdb sql container create --account-name $cosmosDbAcct --database-name $cosmosDBName --name order-events --partition-key-path "/id" -g $grp

## Catalog Service
az containerapp create -n catalog-service -g $grp \
    --image $acr.azurecr.io/catalog-service \
    --environment $acaenv \
    --target-port 80 --ingress external \
    --min-replicas 0 --max-replicas 1 \
    --registry-server $loginSrv \
    --registry-username $acr \
    --registry-password $pwd \
    --env-vars "App__UseSQLite=true"

az containerapp ingress cors enable -n catalog-service -g $grp --allowed-origins * --allow-credentials true    

catalogUrl=$(az containerapp show -n catalog-service -g $grp --query properties.configuration.ingress.fqdn -o tsv)   

echo $catalogUrl

## Orders Service
cosmosKey=$(az keyvault secret show --vault-name $vault --name "cosmosKey" --query  value -o tsv)    

az containerapp create -n orders-service -g $grp \
    --image $acr.azurecr.io/orders-service \
    --environment $acaenv \
    --target-port 80 --ingress external \
    --min-replicas 0 --max-replicas 1 \
    --registry-server $loginSrv \
    --registry-username $acr \
    --registry-password $pwd \
    --env-vars "CosmosDB__AccountKey=$cosmosKey" 

az containerapp ingress cors enable -n orders-service -g $grp --allowed-origins * --allow-credentials true    
    
ordersUrl=$(az containerapp show -n orders-service -g $grp --query properties.configuration.ingress.fqdn -o tsv)    

echo $ordersUrl

## Shop UI
az containerapp create -n shop-ui -g $grp \
    --image $acr.azurecr.io/shop-ui \
    --environment $acaenv \
    --target-port 80 --ingress external \
    --min-replicas 0 --max-replicas 1 \
    --registry-server $loginSrv \
    --registry-username $acr \
    --registry-password $pwd \
    --env-vars "ENV_CATALOG_API_URL=https://$catalogUrl" "ENV_ORDERS_API_URL=https://$ordersUrl"     

## Order Event Processor
cosmosDBCon=$(az cosmosdb keys list --name $cosmosDbAcct -g $grp --type connection-strings --query connectionStrings[0].connectionString -o tsv)

az functionapp create -n order-event-processor-$env -g $grp -s $storageAcct --consumption-plan-location $loc --functions-version 4
az functionapp config appsettings set -n order-event-processor-$env -g $grp --settings "CosmosDBConnectionString=$cosmosDBCon"

az functionapp config appsettings set -n order-event-processor-$env -g $grp --settings "DBName=food-nosql-dev"

az functionapp config appsettings set -n order-event-processor-$env -g $grp --settings "OrdersContainer=orders"

cd order-events-processor
func azure functionapp publish order-event-processor-$env --csharp